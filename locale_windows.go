package locale

import (
	"strconv"
	"strings"
)

func idFor(loc string) int64 {
	switch loc {
	case "af_ZA":
		return 1078
	case "am_ET":
		return 1118
	case "ar_AE":
		return 14337
	case "ar_BH":
		return 15361
	case "ar_DZ":
		return 5121
	case "ar_EG":
		return 3073
	case "ar_IQ":
		return 2049
	case "ar_JO":
		return 11265
	case "ar_KW":
		return 13313
	case "ar_LB":
		return 12289
	case "ar_LY":
		return 4097
	case "ar_MA":
		return 6145
	case "ar_OM":
		return 8193
	case "ar_QA":
		return 16385
	case "ar_SA":
		return 1025
	case "ar_SY":
		return 10241
	case "ar_TN":
		return 7169
	case "ar_YE":
		return 9217
	case "arn_CL":
		return 1146
	case "as_IN":
		return 1101
	case "az_AZ":
		return 2092
	case "ba_RU":
		return 1133
	case "be_BY":
		return 1059
	case "bg_BG":
		return 1026
	case "bn_IN":
		return 1093
	case "bo_BT":
		return 2129
	case "bo_CN":
		return 1105
	case "br_FR":
		return 1150
	case "bs_BA":
		return 8218
	case "ca_ES":
		return 1027
	case "co_FR":
		return 1155
	case "cs_CZ":
		return 1029
	case "cy_GB":
		return 1106
	case "da_DK":
		return 1030
	case "de_AT":
		return 3079
	case "de_CH":
		return 2055
	case "de_DE":
		return 1031
	case "de_LI":
		return 5127
	case "de_LU":
		return 4103
	case "div_MV":
		return 1125
	case "dsb_DE":
		return 2094
	case "el_GR":
		return 1032
	case "en_AU":
		return 3081
	case "en_BZ":
		return 10249
	case "en_CA":
		return 4105
	case "en_CB":
		return 9225
	case "en_GB":
		return 2057
	case "en_IE":
		return 6153
	case "en_IN":
		return 18441
	case "en_JA":
		return 8201
	case "en_MY":
		return 17417
	case "en_NZ":
		return 5129
	case "en_PH":
		return 13321
	case "en_TT":
		return 11273
	case "en_US":
		return 1033
	case "en_ZA":
		return 7177
	case "en_ZW":
		return 12297
	case "es_AR":
		return 11274
	case "es_BO":
		return 16394
	case "es_CL":
		return 13322
	case "es_CO":
		return 9226
	case "es_CR":
		return 5130
	case "es_DO":
		return 7178
	case "es_EC":
		return 12298
	case "es_ES":
		return 3082
	case "es_GT":
		return 4106
	case "es_HN":
		return 18442
	case "es_MX":
		return 2058
	case "es_NI":
		return 19466
	case "es_PA":
		return 6154
	case "es_PE":
		return 10250
	case "es_PR":
		return 20490
	case "es_PY":
		return 15370
	case "es_SV":
		return 17418
	case "es_UR":
		return 14346
	case "es_US":
		return 21514
	case "es_VE":
		return 8202
	case "et_EE":
		return 1061
	case "eu_ES":
		return 1069
	case "fa_IR":
		return 1065
	case "fi_FI":
		return 1035
	case "fil_PH":
		return 1124
	case "fo_FO":
		return 1080
	case "fr_BE":
		return 2060
	case "fr_CA":
		return 3084
	case "fr_CH":
		return 4108
	case "fr_FR":
		return 1036
	case "fr_LU":
		return 5132
	case "fr_MC":
		return 6156
	case "fy_NL":
		return 1122
	case "ga_IE":
		return 2108
	case "gbz_AF":
		return 1164
	case "gl_ES":
		return 1110
	case "gsw_FR":
		return 1156
	case "gu_IN":
		return 1095
	case "ha_NG":
		return 1128
	case "he_IL":
		return 1037
	case "hi_IN":
		return 1081
	case "hr_BA":
		return 4122
	case "hr_HR":
		return 1050
	case "hu_HU":
		return 1038
	case "hy_AM":
		return 1067
	case "id_ID":
		return 1057
	case "ii_CN":
		return 1144
	case "is_IS":
		return 1039
	case "it_CH":
		return 2064
	case "it_IT":
		return 1040
	case "iu_CA":
		return 2141
	case "ja_JP":
		return 1041
	case "ka_GE":
		return 1079
	case "kh_KH":
		return 1107
	case "kk_KZ":
		return 1087
	case "kl_GL":
		return 1135
	case "kn_IN":
		return 1099
	case "ko_KR":
		return 1042
	case "kok_IN":
		return 1111
	case "ky_KG":
		return 1088
	case "lb_LU":
		return 1134
	case "lo_LA":
		return 1108
	case "lt_LT":
		return 1063
	case "lv_LV":
		return 1062
	case "mi_NZ":
		return 1153
	case "mk_MK":
		return 1071
	case "ml_IN":
		return 1100
	case "mn_CN":
		return 2128
	case "mn_MN":
		return 1104
	case "moh_CA":
		return 1148
	case "mr_IN":
		return 1102
	case "ms_BN":
		return 2110
	case "ms_MY":
		return 1086
	case "mt_MT":
		return 1082
	case "my_MM":
		return 1109
	case "nb_NO":
		return 1044
	case "ne_NP":
		return 1121
	case "nl_BE":
		return 2067
	case "nl_NL":
		return 1043
	case "nn_NO":
		return 2068
	case "ns_ZA":
		return 1132
	case "oc_FR":
		return 1154
	case "or_IN":
		return 1096
	case "pa_IN":
		return 1094
	case "pl_PL":
		return 1045
	case "ps_AF":
		return 1123
	case "pt_BR":
		return 1046
	case "pt_PT":
		return 2070
	case "qut_GT":
		return 1158
	case "quz_BO":
		return 1131
	case "quz_EC":
		return 2155
	case "quz_PE":
		return 3179
	case "rm_CH":
		return 1047
	case "ro_RO":
		return 1048
	case "ru_RU":
		return 1049
	case "rw_RW":
		return 1159
	case "sa_IN":
		return 1103
	case "sah_RU":
		return 1157
	case "se_FI":
		return 3131
	case "se_NO":
		return 1083
	case "se_SE":
		return 2107
	case "si_LK":
		return 1115
	case "sk_SK":
		return 1051
	case "sl_SI":
		return 1060
	case "sma_NO":
		return 6203
	case "sma_SE":
		return 7227
	case "smj_NO":
		return 4155
	case "smj_SE":
		return 5179
	case "smn_FI":
		return 9275
	case "sms_FI":
		return 8251
	case "sq_AL":
		return 1052
	case "sr_BA":
		return 7194
	case "sr_SP":
		return 3098
	case "sv_FI":
		return 2077
	case "sv_SE":
		return 1053
	case "sw_KE":
		return 1089
	case "syr_SY":
		return 1114
	case "ta_IN":
		return 1097
	case "te_IN":
		return 1098
	case "tg_TJ":
		return 1064
	case "th_TH":
		return 1054
	case "tk_TM":
		return 1090
	case "tmz_DZ":
		return 2143
	case "tn_ZA":
		return 1074
	case "tr_TR":
		return 1055
	case "tt_RU":
		return 1092
	case "ug_CN":
		return 1152
	case "uk_UA":
		return 1058
	case "ur_IN":
		return 2080
	case "ur_PK":
		return 1056
	case "uz_UZ":
		return 2115
	case "vi_VN":
		return 1066
	case "wen_DE":
		return 1070
	case "wo_SN":
		return 1160
	case "xh_ZA":
		return 1076
	case "yo_NG":
		return 1130
	case "zh_CHS":
		return 4
	case "zh_CHT":
		return 31748
	case "zh_CN":
		return 2052
	case "zh_HK":
		return 3076
	case "zh_MO":
		return 5124
	case "zh_SG":
		return 4100
	case "zh_TW":
		return 1028
	case "zu_ZA":
		return 1077
	default:
		return 1033 // "en_US"
	}
}

func forId(id int64) string {
	switch id {
	case 1078:
		return "af_ZA"
	case 1118:
		return "am_ET"

	case 14337:
		return "ar_AE"
	case 15361:
		return "ar_BH"
	case 5121:
		return "ar_DZ"
	case 3073:
		return "ar_EG"
	case 2049:
		return "ar_IQ"
	case 11265:
		return "ar_JO"
	case 13313:
		return "ar_KW"
	case 12289:
		return "ar_LB"
	case 4097:
		return "ar_LY"
	case 6145:
		return "ar_MA"
	case 8193:
		return "ar_OM"
	case 16385:
		return "ar_QA"
	case 1025:
		return "ar_SA"
	case 10241:
		return "ar_SY"
	case 7169:
		return "ar_TN"
	case 9217:
		return "ar_YE"
	case 1146:
		return "arn_CL"
	case 1101:
		return "as_IN"
	case 2092:
		return "az_AZ"
	case 1133:
		return "ba_RU"
	case 1059:
		return "be_BY"
	case 1026:
		return "bg_BG"
	case 1093:
		return "bn_IN"
	case 2129:
		return "bo_BT"
	case 1105:
		return "bo_CN"
	case 1150:
		return "br_FR"
	case 8218:
		return "bs_BA"
	case 1027:
		return "ca_ES"
	case 1155:
		return "co_FR"
	case 1029:
		return "cs_CZ"
	case 1106:
		return "cy_GB"
	case 1030:
		return "da_DK"
	case 3079:
		return "de_AT"
	case 2055:
		return "de_CH"
	case 1031:
		return "de_DE"
	case 5127:
		return "de_LI"
	case 4103:
		return "de_LU"
	case 1125:
		return "div_MV"
	case 2094:
		return "dsb_DE"
	case 1032:
		return "el_GR"
	case 3081:
		return "en_AU"
	case 10249:
		return "en_BZ"
	case 4105:
		return "en_CA"
	case 9225:
		return "en_CB"
	case 2057:
		return "en_GB"
	case 6153:
		return "en_IE"
	case 18441:
		return "en_IN"
	case 8201:
		return "en_JA"
	case 17417:
		return "en_MY"
	case 5129:
		return "en_NZ"
	case 13321:
		return "en_PH"
	case 11273:
		return "en_TT"
	case 1033:
		return "en_US"
	case 7177:
		return "en_ZA"
	case 12297:
		return "en_ZW"
	case 11274:
		return "es_AR"
	case 16394:
		return "es_BO"
	case 13322:
		return "es_CL"
	case 9226:
		return "es_CO"
	case 5130:
		return "es_CR"
	case 7178:
		return "es_DO"
	case 12298:
		return "es_EC"
	case 3082:
		return "es_ES"
	case 4106:
		return "es_GT"
	case 18442:
		return "es_HN"
	case 2058:
		return "es_MX"
	case 19466:
		return "es_NI"
	case 6154:
		return "es_PA"
	case 10250:
		return "es_PE"
	case 20490:
		return "es_PR"
	case 15370:
		return "es_PY"
	case 17418:
		return "es_SV"
	case 14346:
		return "es_UR"
	case 21514:
		return "es_US"
	case 8202:
		return "es_VE"
	case 1061:
		return "et_EE"
	case 1069:
		return "eu_ES"
	case 1065:
		return "fa_IR"
	case 1035:
		return "fi_FI"
	case 1124:
		return "fil_PH"
	case 1080:
		return "fo_FO"
	case 2060:
		return "fr_BE"
	case 3084:
		return "fr_CA"
	case 4108:
		return "fr_CH"
	case 1036:
		return "fr_FR"
	case 5132:
		return "fr_LU"
	case 6156:
		return "fr_MC"
	case 1122:
		return "fy_NL"
	case 2108:
		return "ga_IE"
	case 1164:
		return "gbz_AF"
	case 1110:
		return "gl_ES"
	case 1156:
		return "gsw_FR"
	case 1095:
		return "gu_IN"
	case 1128:
		return "ha_NG"
	case 1037:
		return "he_IL"
	case 1081:
		return "hi_IN"
	case 4122:
		return "hr_BA"
	case 1050:
		return "hr_HR"
	case 1038:
		return "hu_HU"
	case 1067:
		return "hy_AM"
	case 1057:
		return "id_ID"
	case 1144:
		return "ii_CN"
	case 1039:
		return "is_IS"
	case 2064:
		return "it_CH"
	case 1040:
		return "it_IT"
	case 2141:
		return "iu_CA"
	case 1041:
		return "ja_JP"
	case 1079:
		return "ka_GE"
	case 1107:
		return "kh_KH"
	case 1087:
		return "kk_KZ"
	case 1135:
		return "kl_GL"
	case 1099:
		return "kn_IN"
	case 1042:
		return "ko_KR"
	case 1111:
		return "kok_IN"
	case 1088:
		return "ky_KG"
	case 1134:
		return "lb_LU"
	case 1108:
		return "lo_LA"
	case 1063:
		return "lt_LT"
	case 1062:
		return "lv_LV"
	case 1153:
		return "mi_NZ"
	case 1071:
		return "mk_MK"
	case 1100:
		return "ml_IN"
	case 2128:
		return "mn_CN"
	case 1104:
		return "mn_MN"
	case 1148:
		return "moh_CA"
	case 1102:
		return "mr_IN"
	case 2110:
		return "ms_BN"
	case 1086:
		return "ms_MY"
	case 1082:
		return "mt_MT"
	case 1109:
		return "my_MM"
	case 1044:
		return "nb_NO"
	case 1121:
		return "ne_NP"
	case 2067:
		return "nl_BE"
	case 1043:
		return "nl_NL"
	case 2068:
		return "nn_NO"
	case 1132:
		return "ns_ZA"
	case 1154:
		return "oc_FR"
	case 1096:
		return "or_IN"
	case 1094:
		return "pa_IN"
	case 1045:
		return "pl_PL"
	case 1123:
		return "ps_AF"
	case 1046:
		return "pt_BR"
	case 2070:
		return "pt_PT"
	case 1158:
		return "qut_GT"
	case 1131:
		return "quz_BO"
	case 2155:
		return "quz_EC"
	case 3179:
		return "quz_PE"
	case 1047:
		return "rm_CH"
	case 1048:
		return "ro_RO"
	case 1049:
		return "ru_RU"
	case 1159:
		return "rw_RW"
	case 1103:
		return "sa_IN"
	case 1157:
		return "sah_RU"
	case 3131:
		return "se_FI"
	case 1083:
		return "se_NO"
	case 2107:
		return "se_SE"
	case 1115:
		return "si_LK"
	case 1051:
		return "sk_SK"
	case 1060:
		return "sl_SI"
	case 6203:
		return "sma_NO"
	case 7227:
		return "sma_SE"
	case 4155:
		return "smj_NO"
	case 5179:
		return "smj_SE"
	case 9275:
		return "smn_FI"
	case 8251:
		return "sms_FI"
	case 1052:
		return "sq_AL"
	case 7194:
		return "sr_BA"
	case 3098:
		return "sr_SP"
	case 2077:
		return "sv_FI"
	case 1053:
		return "sv_SE"
	case 1089:
		return "sw_KE"
	case 1114:
		return "syr_SY"
	case 1097:
		return "ta_IN"
	case 1098:
		return "te_IN"
	case 1064:
		return "tg_TJ"
	case 1054:
		return "th_TH"
	case 1090:
		return "tk_TM"
	case 2143:
		return "tmz_DZ"
	case 1074:
		return "tn_ZA"
	case 1055:
		return "tr_TR"
	case 1092:
		return "tt_RU"
	case 1152:
		return "ug_CN"
	case 1058:
		return "uk_UA"
	case 2080:
		return "ur_IN"
	case 1056:
		return "ur_PK"
	case 2115:
		return "uz_UZ"
	case 1066:
		return "vi_VN"
	case 1070:
		return "wen_DE"
	case 1160:
		return "wo_SN"
	case 1076:
		return "xh_ZA"
	case 1130:
		return "yo_NG"
	case 4:
		return "zh_CHS"
	case 31748:
		return "zh_CHT"
	case 2052:
		return "zh_CN"
	case 3076:
		return "zh_HK"
	case 5124:
		return "zh_MO"
	case 4100:
		return "zh_SG"
	case 1028:
		return "zh_TW"
	case 1077:
		return "zu_ZA"
	default:
		return "en_US"
	}
}

func Detect() string {
	out, err := run("wmic", "os", "get", "locale")
	if err != nil {
		return Default
	}
	out = strings.Replace(out, "Locale", "", -1)
	id, err := strconv.ParseInt(out, 16, 64)
	if err != nil {
		return Default
	}
	return forId(id)
}
